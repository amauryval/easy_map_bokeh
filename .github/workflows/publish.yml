name: CI

on:
  push:
    tags:
      - '*.*.*'

jobs:

  test_and_publish_on_conda:

    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Miniconda
      shell: bash
      run: |
        if [[ "${{ runner.os }}" = "Linux" ]]; then
          MINICONDA_FILENAME=Miniconda3-latest-Linux-x86_64.sh
        elif [[ "${{ runner.os }}" = "macOS" ]]; then
          MINICONDA_FILENAME=Miniconda3-latest-MacOSX-x86_64.sh
        elif [[ "${{ runner.os }}" = "Windows" ]]; then
          MINICONDA_FILENAME=Miniconda3-latest-Windows-x86_64.exe
        fi
        curl -L -o $MINICONDA_FILENAME "https://repo.anaconda.com/miniconda/$MINICONDA_FILENAME"
        bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3

    - name: Setup paths
      shell: bash
      run: |
        echo "::add-path::$HOME/miniconda3/bin"
        echo "::add-path::$HOME/miniconda3/Scripts"
        if [ "${{ matrix.os }}" != "windows-latest" ]; then
          echo '::set-env name=CONDA_EXEC::${CONDA}/bin/conda'
        else
          echo '::set-env name=CONDA_EXEC::C:\Miniconda\condabin\conda.bat'
        fi

    - name: Configure conda
      env:
        CONDA_REQS: "conda conda-verify"
      run: |
        conda config --set auto_update_conda off
        conda install --yes --quiet $CONDA_REQS
        conda install mamba -c conda-forge
        mamba env create --file environment.yml

    - name: Run tests
      shell: bash
      run: |
        source ~/miniconda3/etc/profile.d/conda.sh
        conda activate easy_map_bokeh
        python -m pytest --cov=easy_map_bokeh --cov-report=xml tests/

    - name: publish-to-conda
      uses: fcakyon/conda-publish-action@v1.3
      with:
        subdir: 'conda'
        anacondatoken: ${{ secrets.ANACONDA_TOKEN }}
        platforms: 'win osx linux'
